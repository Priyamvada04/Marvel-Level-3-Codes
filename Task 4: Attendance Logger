#include <WiFi.h>
#include <HTTPClient.h>
#include <SPI.h>
#include <MFRC522.h>
#include <NTPClient.h>
#include <WiFiUdp.h>

const char* ssid = "SSID";
const char* password = "PASSWORD";

const char* webhookURL = "https://hooks.zapier.com/hooks/catch/webhook_url/";

#define SS_PIN  5
#define RST_PIN 27

MFRC522 rfid(SS_PIN, RST_PIN);

// NTP Time Client
WiFiUDP ntpUDP;
NTPClient timeClient(ntpUDP, "pool.ntp.org", 19800, 60000);  // IST Timezone (+5:30)

// Function to format date as YYYY-MM-DD
String getFormattedDate() {
    time_t rawTime = timeClient.getEpochTime();
    struct tm *timeInfo = localtime(&rawTime);

    char buffer[11];  // YYYY-MM-DD format
    snprintf(buffer, sizeof(buffer), "%04d-%02d-%02d", 
             timeInfo->tm_year + 1900, timeInfo->tm_mon + 1, timeInfo->tm_mday);
    
    return String(buffer);
}

// Function to format time as HH:MM:SS
String getFormattedTime() {
    time_t rawTime = timeClient.getEpochTime();
    struct tm *timeInfo = localtime(&rawTime);

    char buffer[9];  // HH:MM:SS format
    snprintf(buffer, sizeof(buffer), "%02d:%02d:%02d", 
             timeInfo->tm_hour, timeInfo->tm_min, timeInfo->tm_sec);
    
    return String(buffer);
}

void setup() {
    Serial.begin(115200);
    WiFi.begin(ssid, password);

    while (WiFi.status() != WL_CONNECTED) {
        Serial.print(".");
        delay(1000);
    }
    Serial.println("\n..Connected to WiFi");

    SPI.begin();
    rfid.PCD_Init();
    
    timeClient.begin();
    timeClient.update();
}

void loop() {
    if (!rfid.PICC_IsNewCardPresent() || !rfid.PICC_ReadCardSerial()) {
        delay(500);
        return;
    }

    String cardUID = "";
    for (byte i = 0; i < rfid.uid.size; i++) {
        cardUID += String(rfid.uid.uidByte[i], HEX);
    }
    rfid.PICC_HaltA();

    timeClient.update();
    String date = getFormattedDate();
    String time = getFormattedTime();

    Serial.println("Sending to Zapier:");
    String payload = "{\"date\":\"" + date + "\", \"time\":\"" + time + "\", \"rfid\":\"" + cardUID + "\"}";
    Serial.println(payload);

    sendToGoogleSheets(payload);

    Serial.println("Data sent to Zapier successfully!\n");
    delay(2000);
}

void sendToGoogleSheets(String payload) {
    if (WiFi.status() == WL_CONNECTED) {
        HTTPClient http;
        http.begin(webhookURL);
        http.addHeader("Content-Type", "application/json");

        int httpResponseCode = http.POST(payload);
        Serial.print("HTTP Response code: ");
        Serial.println(httpResponseCode);

        http.end();
    } else {
        Serial.println("WiFi Disconnected!");
    }
}
