#include <WiFi.h>
#include <WiFiClientSecure.h>
#include <UniversalTelegramBot.h>

const char* ssid = "WiFi_Name";
const char* password = "WiFi_Password";

const char* botToken = "Telegram_Bot_Token";
const char* chatID = "Chat_ID";

// Motor Driver Pins (L298N)
#define IN1 18
#define IN2 19
#define ENA 23

WiFiClientSecure client;
UniversalTelegramBot bot(botToken, client);

void setup() {
    Serial.begin(115200);

    Serial.println("Connecting to Wi-Fi...");
    WiFi.begin(ssid, password);
    while (WiFi.status() != WL_CONNECTED) {
        delay(1000);
        Serial.print(".");
    }
    Serial.println("\nWi-Fi Connected!");

    // Motor Pins Setup
    pinMode(IN1, OUTPUT);
    pinMode(IN2, OUTPUT);
    pinMode(ENA, OUTPUT);
    analogWrite(ENA, 255); 

    // Enable SSL for Telegram
    client.setInsecure();
}

void loop() {
    int messageCount = bot.getUpdates(bot.last_message_received + 1);

    while (messageCount) {
        Serial.println("Got new message!");
        for (int i = 0; i < messageCount; i++) {
            String messageText = bot.messages[i].text;
            Serial.print("Message: ");
            Serial.println(messageText);

            if (messageText == "Motor Forward") {
                Serial.println("Motor Moving Forward");
                digitalWrite(IN1, HIGH);
                digitalWrite(IN2, LOW);
            } 
            else if (messageText == "Motor Backward") {
                Serial.println("Motor Moving Backward");
                digitalWrite(IN1, LOW);
                digitalWrite(IN2, HIGH);
            } 
            else if (messageText == "Motor Stop") {
                Serial.println("Motor Stopped");
                digitalWrite(IN1, LOW);
                digitalWrite(IN2, LOW);
            }
        }
        messageCount = bot.getUpdates(bot.last_message_received + 1);
    }
}
